[gd_scene load_steps=3 format=3 uid="uid://cf4dybp0pa186"]

[ext_resource type="TileSet" uid="uid://d1muw3avp3msu" path="res://resource/bit_resource/tileset/tilemap.tres" id="1"]

[sub_resource type="GDScript" id="1"]
script/source = "
extends TileMap

var board = 128
var offset = 60 # 256 is 40

var noise
var noise_seed = 0
var octaves = 3 # 4
var period = 25 # 20.0
var persistence = 0.8

var land_map = []

var tile_data = {}

func _ready():
	noise = FastNoiseLite.new()
	#noise = OpenSimplexNoise.new()
	noise.noise_type = 4
	randomize()
	noise.seed = noise_seed
	noise.fractal_octaves = octaves
	noise.fractal_lacunarity = period
	noise.fractal_gain = persistence
	
	for x in range(board):
		for y in range(board*2):
			var the_land_noise = noise.get_noise_2d(x,y)*100+10
			for tile in tile_data:
				if the_land_noise <= tile_data[tile]['noise_level']:
					set_cell(0,Vector2(x-board/2+offset, y-board/2+offset), tile_data[tile]['tile_id'])
					break

func _process(delta):
	pass
	
func mouse_pos_transition(mouse_pos):
	return Vector2(local_to_map(mouse_pos)[0],local_to_map(mouse_pos)[1])
"

[node name="TileMap" type="TileMap"]
tile_set = ExtResource("1")
format = 2
script = SubResource("1")
